# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application
on:
  push:
    branches: [main]
env:
  PYTHON_VERSION: 3.11
  DEV_ENV: production
jobs:
  build:
    name: raw code checkout & testing
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with Flake8. https://flake8.pycqa.org/en/latest/index.html
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics > lint.json
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics >> lint.json
          cat lint.json
      - name: Test with pytest
        run: |-
          # performs a pytest in the current working dir. The -ver = verbose flag provides a more detailed output.
          pytest -v > pytest.json
          cat pytest.json
